var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var P=(a,e)=>{for(var n in e)r(a,n,{get:e[n],enumerable:!0})},l=(a,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of p(e))!u.call(a,o)&&o!==n&&r(a,o,{get:()=>e[o],enumerable:!(t=m(e,o))||t.enumerable});return a};var A=a=>l(r({},"__esModule",{value:!0}),a);var b={};P(b,{pacienteKnex:()=>B});module.exports=A(b);var i=require("knex"),_={client:"pg",connection:{host:process.env.DATABASE_HOST,port:Number(process.env.DATABASE_PORT),user:process.env.DATABASE_USER,password:process.env.DATABASE_PASSWORD,database:process.env.DATABASE_NAME}},d=(0,i.knex)(_),c=d;var s=class{async getPacientes(e,n,t){return await c.select("*").from("paciente").where({cd_multi_empresa:e,ativo:1}).limit(n).offset((t-1)*n)}async createPaciente(e){console.log(e),await c("paciente").insert({data:e,ativo:1})}async deletePaciente(e,n){await c("paciente").where({cd_paciente:e,cd_multi_empresa:n}).del()}async countPacientes(e){let n=await c("paciente").where({cd_multi_empresa:e,ativo:1}).count();return Number(n[0].count)}async getPacienteById(){}async getPacienteByName(e,n){console.log(e);let t=await c.select("*").from("paciente").where({cd_multi_empresa:n,ativo:1}).andWhere("nm_paciente","ILIKE",`%${e}%`);return console.log(t),t}async updatePaciente(e,n,t){await c("paciente").where({cd_paciente:e,cd_multi_empresa:n}).update(t)}},B=new s;0&&(module.exports={pacienteKnex});
