var d=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var A=(a,e)=>{for(var t in e)d(a,t,{get:e[t],enumerable:!0})},B=(a,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of h(e))!w.call(a,s)&&s!==t&&d(a,s,{get:()=>e[s],enumerable:!(i=_(e,s))||i.enumerable});return a};var T=a=>B(d({},"__esModule",{value:!0}),a);var v={};A(v,{pacienteRoutes:()=>q});module.exports=T(v);var m={description:"Route to get all paciente, returns some data about the situation.",tags:["Paciente"],response:{200:{description:"Successful response!",type:"array",properties:{message:{type:"string",description:"Application status message"},uptime:{type:"number",description:"Time the application has been up"},responseTime:{type:"number",description:"Response delay time"},timestamp:{type:"number",description:"Request date"}}},500:{description:"Application error!",type:"object",properties:{message:{type:"string",description:"Application error message"},uptime:{type:"number",description:"Time the application has been up"},responseTime:{type:"number",description:"Response delay time"},timestamp:{type:"number",description:"Request date"}}}}},b={description:"Route to get all paciente, returns some data about the situation.",tags:["Paciente"],response:{200:{description:"Successful response!",type:"number",properties:{message:{type:"string",description:"Application status message"},uptime:{type:"number",description:"Time the application has been up"},responseTime:{type:"number",description:"Response delay time"},timestamp:{type:"number",description:"Request date"}}},500:{description:"Application error!",type:"object",properties:{message:{type:"string",description:"Application error message"},uptime:{type:"number",description:"Time the application has been up"},responseTime:{type:"number",description:"Response delay time"},timestamp:{type:"number",description:"Request date"}}}}},l={description:"Route to register a paciente.",tags:["Paciente"],response:{201:{description:"Successful response!",type:"array",properties:{message:{type:"string",description:"Application status message"},uptime:{type:"number",description:"Time the application has been up"},responseTime:{type:"number",description:"Response delay time"},timestamp:{type:"number",description:"Request date"}}},500:{description:"Application error!",type:"object",properties:{message:{type:"string",description:"Application error message"},uptime:{type:"number",description:"Time the application has been up"},responseTime:{type:"number",description:"Response delay time"},timestamp:{type:"number",description:"Request date"}}}}};var P=require("knex"),F={client:"pg",connection:{host:process.env.DATABASE_HOST,port:Number(process.env.DATABASE_PORT),user:process.env.DATABASE_USER,password:process.env.DATABASE_PASSWORD,database:process.env.DATABASE_NAME}},S=(0,P.knex)(F),p=S;var g=class{async getPacientes(e,t,i){return await p.select("*").from("paciente").where({cd_multi_empresa:e,ativo:1}).limit(t).offset((i-1)*t)}async createPaciente(e){console.log(e),await p("paciente").insert({data:e,ativo:1})}async deletePaciente(e,t){await p("paciente").where({cd_paciente:e,cd_multi_empresa:t}).del()}async countPacientes(e){let t=await p("paciente").where({cd_multi_empresa:e,ativo:1}).count();return Number(t[0].count)}async getPacienteById(){}async getPacienteByName(e,t){console.log(e);let i=await p.select("*").from("paciente").where({cd_multi_empresa:t,ativo:1}).andWhere("nm_paciente","ILIKE",`%${e}%`);return console.log(i),i}async updatePaciente(e,t,i){await p("paciente").where({cd_paciente:e,cd_multi_empresa:t}).update(i)}},o=new g;var n=require("zod"),f=n.z.object({data:n.z.object({nm_paciente:n.z.string(),cpf:n.z.string(),ds_sexo:n.z.string().nullable().optional(),dt_nascimento:n.z.string(),email:n.z.string().nullable().optional(),numero_telefone:n.z.string(),estado_civil:n.z.string().nullable().optional(),nm_cidade:n.z.string().nullable().optional(),cep:n.z.string().nullable().optional(),nm_estado:n.z.string().nullable().optional(),nm_pais:n.z.string().nullable().optional(),cd_multi_empresa:n.z.number().nullable().optional(),rg:n.z.string().nullable().optional(),profissao:n.z.string().nullable().optional(),empresa:n.z.string().nullable().optional(),telefone_fixo:n.z.string().nullable().optional(),preferencia_contato:n.z.string(),breve_diagnostico:n.z.string().nullable().optional(),nm_bairro:n.z.string().nullable().optional(),logradouro:n.z.string().nullable().optional(),numero_casa:n.z.string().nullable().optional(),complemento:n.z.string().nullable().optional(),cd_convenio:n.z.number().nullable().optional(),numero_convenio:n.z.string().nullable().optional(),validade_carteira:n.z.string().nullable().optional(),numero_cns:n.z.string().nullable().optional()})}),u=class{async getPacientes(e,t){let{cd_multi_empresa:i,qt_resultados:s,page:r}=e.query,c=await o.getPacientes(i,s,r);return t.status(200).send(c)}async createPaciente(e,t){console.log(e.body);let{data:i}=f.parse(e.body);await o.createPaciente(i);let s=await o.getPacientes(i.cd_multi_empresa);return t.status(201).send(s)}async deletePaciente(e,t){let{cd_paciente:i,cd_multi_empresa:s}=e.query;await o.deletePaciente(i,s);let r=await o.getPacientes(s);return t.status(200).send(r)}async getPacienteById(e,t){}async getPacienteByName(e,t){let{nm_paciente:i,cd_multi_empresa:s}=e.query,r=await o.getPacienteByName(i,s);return t.status(200).send(r)}async countPacientes(e,t){let{cd_multi_empresa:i}=e.query,s=await o.countPacientes(i);return t.status(200).send(s)}async updatePaciente(e,t){try{let{cd_paciente:i,cd_multi_empresa:s}=e.query,{data:r}=f.parse(e.body),c=new Object;for(let y in r)r[y]!=null&&(c[y]=r[y]);await o.updatePaciente(i,s,c);let R=await o.getPacientes(s);return t.status(200).send(R)}catch(i){return console.log(i),t.status(500).send({message:"Internal server error",messageError:i})}}};async function q(a){let e=new u;a.get("/paciente/getAll",{schema:m},e.getPacientes),a.get("/paciente/getById",{schema:m},e.getPacienteById),a.get("/paciente/getByName",{schema:m},e.getPacienteByName),a.get("/paciente/count",{schema:b},e.countPacientes),a.post("/paciente/create",{schema:l},e.createPaciente),a.delete("/paciente/delete",{schema:l},e.deletePaciente),a.put("/paciente/update",{schema:l},e.updatePaciente)}0&&(module.exports={pacienteRoutes});
