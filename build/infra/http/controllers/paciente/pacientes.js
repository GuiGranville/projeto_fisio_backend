var m=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var R=(o,e)=>{for(var t in e)m(o,t,{get:e[t],enumerable:!0})},B=(o,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of _(e))!b.call(o,s)&&s!==t&&m(o,s,{get:()=>e[s],enumerable:!(a=f(e,s))||a.enumerable});return o};var w=o=>B(m({},"__esModule",{value:!0}),o);var A={};R(A,{Paciente:()=>y});module.exports=w(A);var P=require("knex"),F={client:"pg",connection:{host:process.env.DATABASE_HOST,port:Number(process.env.DATABASE_PORT),user:process.env.DATABASE_USER,password:process.env.DATABASE_PASSWORD,database:process.env.DATABASE_NAME}},v=(0,P.knex)(F),c=v;var u=class{async getPacientes(e,t,a){return await c.select("*").from("paciente").where({cd_multi_empresa:e,ativo:1}).limit(t).offset((a-1)*t)}async createPaciente(e){console.log(e),await c("paciente").insert({data:e,ativo:1})}async deletePaciente(e,t){await c("paciente").where({cd_paciente:e,cd_multi_empresa:t}).del()}async countPacientes(e){let t=await c("paciente").where({cd_multi_empresa:e,ativo:1}).count();return Number(t[0].count)}async getPacienteById(){}async getPacienteByName(e,t){console.log(e);let a=await c.select("*").from("paciente").where({cd_multi_empresa:t,ativo:1}).andWhere("nm_paciente","ILIKE",`%${e}%`);return console.log(a),a}async updatePaciente(e,t,a){await c("paciente").where({cd_paciente:e,cd_multi_empresa:t}).update(a)}},i=new u;var n=require("zod"),d=n.z.object({data:n.z.object({nm_paciente:n.z.string(),cpf:n.z.string(),ds_sexo:n.z.string().nullable().optional(),dt_nascimento:n.z.string(),email:n.z.string().nullable().optional(),numero_telefone:n.z.string(),estado_civil:n.z.string().nullable().optional(),nm_cidade:n.z.string().nullable().optional(),cep:n.z.string().nullable().optional(),nm_estado:n.z.string().nullable().optional(),nm_pais:n.z.string().nullable().optional(),cd_multi_empresa:n.z.number().nullable().optional(),rg:n.z.string().nullable().optional(),profissao:n.z.string().nullable().optional(),empresa:n.z.string().nullable().optional(),telefone_fixo:n.z.string().nullable().optional(),preferencia_contato:n.z.string(),breve_diagnostico:n.z.string().nullable().optional(),nm_bairro:n.z.string().nullable().optional(),logradouro:n.z.string().nullable().optional(),numero_casa:n.z.string().nullable().optional(),complemento:n.z.string().nullable().optional(),cd_convenio:n.z.number().nullable().optional(),numero_convenio:n.z.string().nullable().optional(),validade_carteira:n.z.string().nullable().optional(),numero_cns:n.z.string().nullable().optional()})}),y=class{async getPacientes(e,t){let{cd_multi_empresa:a,qt_resultados:s,page:r}=e.query,l=await i.getPacientes(a,s,r);return t.status(200).send(l)}async createPaciente(e,t){console.log(e.body);let{data:a}=d.parse(e.body);await i.createPaciente(a);let s=await i.getPacientes(a.cd_multi_empresa);return t.status(201).send(s)}async deletePaciente(e,t){let{cd_paciente:a,cd_multi_empresa:s}=e.query;await i.deletePaciente(a,s);let r=await i.getPacientes(s);return t.status(200).send(r)}async getPacienteById(e,t){}async getPacienteByName(e,t){let{nm_paciente:a,cd_multi_empresa:s}=e.query,r=await i.getPacienteByName(a,s);return t.status(200).send(r)}async countPacientes(e,t){let{cd_multi_empresa:a}=e.query,s=await i.countPacientes(a);return t.status(200).send(s)}async updatePaciente(e,t){try{let{cd_paciente:a,cd_multi_empresa:s}=e.query,{data:r}=d.parse(e.body),l=new Object;for(let p in r)r[p]!=null&&(l[p]=r[p]);await i.updatePaciente(a,s,l);let g=await i.getPacientes(s);return t.status(200).send(g)}catch(a){return console.log(a),t.status(500).send({message:"Internal server error",messageError:a})}}};0&&(module.exports={Paciente});
