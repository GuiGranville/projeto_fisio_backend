var R=Object.create;var n=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var P=(e,o)=>{for(var s in o)n(e,s,{get:o[s],enumerable:!0})},l=(e,o,s,a)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of w(o))!E.call(e,t)&&t!==s&&n(e,t,{get:()=>o[t],enumerable:!(a=y(o,t))||a.enumerable});return e};var p=(e,o,s)=>(s=e!=null?R(x(e)):{},l(o||!e||!e.__esModule?n(s,"default",{value:e,enumerable:!0}):s,e)),F=e=>l(n({},"__esModule",{value:!0}),e);var B={};P(B,{autenticacaoRoutes:()=>h});module.exports=F(B);var f=require("knex"),T={client:"pg",connection:{host:process.env.DATABASE_HOST,port:Number(process.env.DATABASE_PORT),user:process.env.DATABASE_USER,password:process.env.DATABASE_PASSWORD,database:process.env.DATABASE_NAME}},b=(0,f.knex)(T),g=b;var i=class{async getProfissional(o){try{return{status:200,messageClient:"Profissional encontrado",messageServer:await g.select("*").from("profissional").where({email:o,ativo:1})}}catch(s){return{status:500,messageClient:"Erro ao buscar profissionais !",messageServer:s}}}},S=new i;var v=p(require("bcrypt")),d=p(require("jsonwebtoken")),m=class{async login(o,s){let{email:a,password:t}=o.body;console.log(a,t);let r=await S.getProfissional(a);if(console.log(r),r.status===500)return s.status(500).send({message:"Internal server error"});if(r.messageServer.length===0)return s.status(404).send({message:"User not found"});console.log(r.messageServer[0].senha);let c=await v.default.compare(t,r.messageServer[0].senha);if(console.log(c),c){let u=d.default.sign({email:r.messageServer[0].email,name:r.messageServer[0].nm_profissional,permissions:["admin"]},"secret",{expiresIn:"1d"});return console.log(u),s.status(200).send({message:"Login Realizado com sucesso",token:u,userInformation:r.messageServer[0]})}return s.status(401).send({message:"Sem login pra voc\xEA amigo !"})}},A=new m;async function h(e){e.post("/autenticacao/login",A.login)}0&&(module.exports={autenticacaoRoutes});
